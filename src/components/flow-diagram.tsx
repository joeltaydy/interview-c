/**
 * FlowDiagram Component
 * Generated by Roo
 *
 * This component demonstrates a simple flow diagram using @xyflow/react.
 * It creates a basic diagram with nodes and edges that can be interacted with.
 */
"use client";

import { useCallback, useState } from "react";
import {
  ReactFlow,
  MiniMap,
  Controls,
  Background,
  Panel,
  ConnectionMode,
  BackgroundVariant,
  addEdge,
  Node,
  Edge,
  Connection,
} from "@xyflow/react";
import "@xyflow/react/dist/style.css";

type FlowDiagramProps = {
  nodes: Node[];
  setNodes: React.Dispatch<React.SetStateAction<Node[]>>;
  onNodesChange: (changes: any) => void;
  edges: Edge[];
  setEdges: React.Dispatch<React.SetStateAction<Edge[]>>;
  onEdgesChange: (changes: any) => void;
};

export default function FlowDiagram({
  nodes,
  setNodes,
  onNodesChange,
  edges,
  setEdges,
  onEdgesChange,
}: FlowDiagramProps) {
  const [nodeName, setNodeName] = useState("");

  const onConnect = useCallback(
    (params: Connection) => setEdges((eds) => addEdge(params, eds)),
    [setEdges]
  );

  const addNode = useCallback(() => {
    if (!nodeName) return;
    const newNode: Node = {
      id: `${nodes.length + 1}`,
      data: { label: nodeName },
      position: {
        x: Math.random() * 500,
        y: Math.random() * 500,
      },
      style: {
        background: "#ff9900",
        color: "white",
        border: "1px solid #cc7a00",
        borderRadius: "8px",
        padding: "10px",
      },
    };
    setNodes((nds) => [...nds, newNode]);
    setNodeName("");
  }, [nodeName, nodes.length, setNodes]);

  return (
    <div style={{ width: "100%", height: "600px" }}>
      <ReactFlow
        nodes={nodes}
        edges={edges}
        onNodesChange={onNodesChange}
        onEdgesChange={onEdgesChange}
        onConnect={onConnect}
        connectionMode={ConnectionMode.Loose}
        fitView
      >
        <Controls />
        <MiniMap />
        <Background variant={BackgroundVariant.Dots} gap={12} size={1} />
        <Panel
          position="top-right"
          className="bg-white p-4 rounded-md shadow-md"
        >
          <h3 className="text-lg font-bold mb-2">Add Node</h3>
          <div className="flex gap-2">
            <input
              type="text"
              value={nodeName}
              onChange={(e) => setNodeName(e.target.value)}
              placeholder="Node name"
              className="px-2 py-1 border rounded"
            />
            <button
              onClick={addNode}
              className="bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600"
            >
              Add
            </button>
          </div>
        </Panel>
      </ReactFlow>
    </div>
  );
}
